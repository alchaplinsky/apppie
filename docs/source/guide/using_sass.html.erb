<%=  partial "guide/navigation"%>
<div class="mainbar">
  <h1>Using SASS</h1>
  <h2 id="common">Using preprocessors</h2>
  <p>
    Why change good-old CSS to something else?
  </p>
  <p>
    Long story short, we're not changing. CSS stays as a final result of you styling work. But wise improvements is always way to go.
  </p>
  <h3>What is CSS preprocessor?</h3>
  <p>Preprocessor is a software that brings you another layer between your mind set and resulting CSS. Briefly, its a directives which say which and how styleheets should be rendered.</p>
  <p>We won't focus on preprocessors listing and their profs/confs, as long as many-many articles and blog posts were written all over the web since preprocessors saw the light. So we leave it to you to make your own opinion which to use or to use it at all.</p>
  <p> We will focus on <strong>why we use it</strong>.</p>
  <dl>
    <dt>Discipline</dt>
    <dd>All preprocessors are more or less strict as for syntax. So you have to follow rules which makes you used to discipline and order. Other way, you get a rendering error which makes CSS preprocessors look like programming language at some point.</dd>
    <dt>Nesting clarity</dt>
    <dd>Preprocessors make it much easier to reflect your objects/modules structure within CSS rules. So if you code shit: i.e. defining object's styles in multiple files or places â€“ it will be noticed with a single glance.</dd>
    <dt>Namespacing</dt>
    <dd>Using preprocessors makes you able to define all related to object within the object, not elsewhere.</dd>
    <dt>Math</dt>
    <dd>Finally, you can do math in styles!</dd>
    <dt>Styles inheritance</dt>
    <dd><code>@extend</code> directive makes styles inheritance beautifully clear.</dd>
    <dt><a href="#mixins">Mixins, functions and variables</a></dt>
    <dd>Powerful tools invest you with nearly boundless oportunities to optimize code into magnicifiently simple and pretty lines.</dd>
  </dl>
  <p>We should say that, frankly, preprocessors do not offer something that cannot be done with just pure CSS (obviously, at least because they generate CSS as result :). But it will definitely take more time and mental efforts to keep it in same order, clarity and simplicity.</p>
  <h2 id="oocss">Sass and OOCSS</h2>
  <p>Having bullet points described above, <a href="http://sass-lang.org">SASS</a>, one of preprocessors, would simply the best candidate to implement OOCSS approach.</p>
  <p>With <code>@extend</code> you keep the difference between parent class/object_definition and its modifiers.</p>
  <h2 id="mixins">Mixin OOCSS example</h2>
  <p>---</p>
</div>
